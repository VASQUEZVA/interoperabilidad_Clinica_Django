# Generated by Django 5.2.7 on 2025-10-15 03:01

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaDiscapacidad',
            fields=[
                ('codigo_discapacidad', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Categoría de discapacidad',
                'verbose_name_plural': 'Categorías de discapacidad',
                'db_table': 'categoria_discapacidad',
                'ordering': ['codigo_discapacidad'],
            },
        ),
        migrations.CreateModel(
            name='CausaMotivoAtencion',
            fields=[
                ('codigo_causa_atencion', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Causa / Motivo de atención',
                'verbose_name_plural': 'Causas / Motivos de atención',
                'db_table': 'causa_motivo_atencion',
                'ordering': ['codigo_causa_atencion'],
            },
        ),
        migrations.CreateModel(
            name='CIE10',
            fields=[
                ('codigo_CIE10', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Clasificación CIE-10',
                'verbose_name_plural': 'Clasificaciones CIE-10',
                'db_table': 'clasificacion_cie10',
                'ordering': ['codigo_CIE10'],
            },
        ),
        migrations.CreateModel(
            name='Comunidad',
            fields=[
                ('id_comunidad', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Comunidad',
                'verbose_name_plural': 'Comunidades',
                'db_table': 'comunidad',
                'ordering': ['id_comunidad'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('paciente_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('documento', models.CharField(max_length=20, unique=True)),
                ('primero_apellido', models.CharField(max_length=60)),
                ('segundo_apellido', models.CharField(blank=True, max_length=60, null=True)),
                ('primero_nombre', models.CharField(max_length=60)),
                ('segundo_nombre', models.CharField(blank=True, max_length=60, null=True)),
                ('fecha_nacimiento', models.DateTimeField(null=True)),
                ('sexo_biologico', models.CharField(choices=[('01', 'Hombre'), ('02', 'Mujer'), ('03', 'Indeterminado / Intersexual')], max_length=2)),
                ('identidad_genero', models.CharField(blank=True, choices=[('01', 'Masculino'), ('02', 'Femenino'), ('03', 'Transgénero'), ('04', 'Neutro'), ('05', 'No lo declara')], max_length=2)),
                ('zona_territorial', models.CharField(blank=True, choices=[('01', 'Urbana'), ('02', 'Rural')], max_length=2)),
                ('id_comunidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.comunidad')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'paciente',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='EnfermedadHuerfana',
            fields=[
                ('codigo_enfermedades_huerfanas', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Enfermedad huérfana',
                'verbose_name_plural': 'Enfermedades huérfanas',
                'db_table': 'enfermedad_huerfana',
                'ordering': ['codigo_enfermedades_huerfanas'],
            },
        ),
        migrations.CreateModel(
            name='EntidadSalud',
            fields=[
                ('codigo_entidad_salud', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
                ('eps', models.BooleanField(default=False)),
                ('ips', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Entidad de salud',
                'verbose_name_plural': 'Entidades de salud',
                'db_table': 'entidad_salud',
                'ordering': ['codigo_entidad_salud'],
            },
        ),
        migrations.CreateModel(
            name='Etnia',
            fields=[
                ('id_etnia', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Etnia',
                'verbose_name_plural': 'Etnias',
                'db_table': 'etnia',
                'ordering': ['id_etnia'],
            },
        ),
        migrations.CreateModel(
            name='ModalidadServicio',
            fields=[
                ('codigo_modalidad_servicio', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Modalidad de servicio',
                'verbose_name_plural': 'Modalidades de servicio',
                'db_table': 'modalidad_servicio',
                'ordering': ['codigo_modalidad_servicio'],
            },
        ),
        migrations.CreateModel(
            name='MunicipioResidenciaHabitual',
            fields=[
                ('codigo_municipio_RH', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Municipio de residencia habitual',
                'verbose_name_plural': 'Municipios de residencia habitual',
                'db_table': 'municipio_residencia_habitual',
                'ordering': ['codigo_municipio_RH'],
            },
        ),
        migrations.CreateModel(
            name='Ocupacion',
            fields=[
                ('codigo_ocupacion', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Ocupación',
                'verbose_name_plural': 'Ocupaciones',
                'db_table': 'ocupacion',
                'ordering': ['codigo_ocupacion'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id_pais', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'db_table': 'pais',
                'ordering': ['id_pais'],
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('tipo_documento', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Tipo de documento',
                'verbose_name_plural': 'Tipos de documento',
                'db_table': 'tipo_documento',
                'ordering': ['tipo_documento'],
            },
        ),
        migrations.CreateModel(
            name='ViaIngresoUsuario',
            fields=[
                ('codigo_via_ingreso', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Vía de ingreso',
                'verbose_name_plural': 'Vías de ingreso',
                'db_table': 'via_ingreso_usuario',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ContactoServicioSalud',
            fields=[
                ('id_atencion_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha_atencion', models.DateTimeField()),
                ('grupo_servicios', models.CharField(choices=[('01', 'Consulta externa'), ('02', 'Apoyo diagnóstico y complementación'), ('03', 'Internación'), ('04', 'Quirúrgico'), ('05', 'Atención inmediata')], max_length=2)),
                ('entorno_atencion', models.CharField(choices=[('01', 'Hogar'), ('02', 'Comunitario'), ('03', 'Escolar'), ('04', 'Laboral'), ('05', 'Institucional')], max_length=2)),
                ('fecha_triage', models.DateTimeField()),
                ('clasificacion_triage', models.CharField(blank=True, choices=[('01', 'Triage I'), ('02', 'Triage II'), ('03', 'Triage III'), ('04', 'Triage IV'), ('05', 'Triage V')], max_length=2, null=True)),
                ('codigo_causa_atencion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.causamotivoatencion')),
                ('paciente_uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pacientes.paciente')),
                ('codigo_entidad_salud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.entidadsalud')),
                ('codigo_modalidad_servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.modalidadservicio')),
                ('codigo_via_ingreso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.viaingresousuario')),
            ],
            options={
                'verbose_name': 'Contacto con el servicio de salud',
                'verbose_name_plural': 'Contactos con el servicio de salud',
                'db_table': 'contacto_servicio_salud',
                'ordering': ['-fecha_atencion'],
            },
        ),
        migrations.CreateModel(
            name='OposicionPresuncionDonacion',
            fields=[
                ('paciente_uuid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pacientes.paciente')),
                ('manifestacion', models.CharField(max_length=2, null=True)),
                ('fecha', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Oposición a presunción de donación',
                'verbose_name_plural': 'Oposiciones a presunción de donación',
                'db_table': 'oposicion_presuncion_donacion',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Diagnostico',
            fields=[
                ('id_diagnostico', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_diagnostico', models.CharField(choices=[('01', 'Impresión diagnóstica'), ('02', 'Confirmado nuevo'), ('03', 'Confirmado repetido')], max_length=2)),
                ('codigo_cie10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.cie10')),
                ('id_atencion_uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos', to='pacientes.contactoserviciosalud')),
                ('codigo_enfermedad_huerfana', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.enfermedadhuerfana')),
            ],
            options={
                'verbose_name': 'Diagnóstico',
                'verbose_name_plural': 'Diagnósticos',
                'db_table': 'diagnostico',
                'ordering': ['-id_diagnostico'],
            },
        ),
        migrations.AddField(
            model_name='paciente',
            name='codigo_entidad_salud',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.entidadsalud'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='id_etnia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.etnia'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='codigo_municipio_RH',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.municipioresidenciahabitual'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='codigo_ocupacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.ocupacion'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='id_pais_residencia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pacientes.pais'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='tipo_documento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pacientes.tipodocumento'),
        ),
        migrations.CreateModel(
            name='DocumentoVoluntadAnticipada',
            fields=[
                ('paciente_uuid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pacientes.paciente')),
                ('voluntad', models.CharField(max_length=2)),
                ('fecha', models.DateTimeField()),
                ('codigo_entidad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pacientes.entidadsalud')),
            ],
            options={
                'verbose_name': 'Documento de voluntad anticipada',
                'verbose_name_plural': 'Documentos de voluntad anticipada',
                'db_table': 'documento_voluntad_anticipada',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='PacienteDiscapacidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_discapacidad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pacientes.categoriadiscapacidad')),
                ('paciente_uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pacientes.paciente')),
            ],
            options={
                'verbose_name': 'Paciente - Discapacidad',
                'verbose_name_plural': 'Pacientes - Discapacidades',
                'db_table': 'paciente_discapacidad',
                'unique_together': {('paciente_uuid', 'codigo_discapacidad')},
            },
        ),
        migrations.CreateModel(
            name='PacienteNacionalidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paciente_uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pacientes.paciente')),
                ('id_pais', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pacientes.pais')),
            ],
            options={
                'verbose_name': 'Paciente - Nacionalidad',
                'verbose_name_plural': 'Pacientes - Nacionalidades',
                'db_table': 'paciente_nacionalidad',
                'unique_together': {('paciente_uuid', 'id_pais')},
            },
        ),
    ]
